CREATE OR REPLACE PROCEDURE REPORT_REPAYDETAIL_M1(BATCH_DATE IN VARCHAR2,FLAG OUT NUMBER) IS
  /*=========================
     催收还款统计明细报表
  ===========================*/
  REPORT_DATE  DATE; --数据统计日期
  D_BEGIN_TIME DATE; --任务开始时间
BEGIN
  D_BEGIN_TIME := SYSDATE;

  --获取当期统计日期
  REPORT_DATE := TO_DATE(NVL(BATCH_DATE, TO_CHAR(SYSDATE - 1, 'yyyy-MM-dd')),'yyyy-MM-dd');

  --记录存储过程执行日志
  PRC_ADD_BATCH_TASK_LOG(TO_CHAR(SYSDATE, 'YYYY/MM/DD'),
                         'REPORT_REPAYDETAIL_M1',
                         '催收M1还款统计明细报表',
                         D_BEGIN_TIME,
                         NULL,
                         '0',
                         NULL);

  --清除当前统计日期的统计数据，以便重新统计
  DELETE FROM REPORT_PAYDETAIL_COLLECT_M1 WHERE RECEIPT_DATE = REPORT_DATE;

  EXECUTE IMMEDIATE 'TRUNCATE TABLE R_TEMP_ACTION_M1';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE R_TEMP_ACTION_M1_1';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE R_TEMP_ACTION_M1_2';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE R_TEMP_ACTION_M1_3';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE R_TEMP_ACTION_M1_4';

  --查出M1催收昨天已还款的行动记录
  INSERT INTO R_TEMP_ACTION_M1_1(SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME)
  SELECT SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME
  FROM EXT_ACTION A
  WHERE  A.ACTIONRESULT='YHK' AND A.ACTIONDATE BETWEEN REPORT_DATE AND REPORT_DATE+0.999999
    AND A.ACTION_LOGINNAME IN
    (SELECT CA.USER_ID FROM EDA_VIRTUAL_GROUP VG,EDA_COLLECTION_ALLOT CA
    WHERE VG.GROUP_ID=CA.TACTICS_ID AND VG.PARENT_GROUP_ID='TDC02');
  COMMIT;

  --查出M1催收PTP承诺期内行动记录
  INSERT INTO R_TEMP_ACTION_M1_1(SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME)
  SELECT A.SYSKEY,A.ID, A.ACTIONDATE, A.ACTIONRESULT, A.ACTIONUSER, A.APPUSER, A.ACTION_LOGINNAME
  FROM EXT_ACTION A ,EXT_PTP P
  WHERE P.ACTIONID=A.ID
    AND REPORT_DATE BETWEEN P.PTPGETPTPDATE AND P.PTPDATE
    AND A.ACTION_LOGINNAME IN
    (SELECT CA.USER_ID FROM EDA_VIRTUAL_GROUP VG,EDA_COLLECTION_ALLOT CA
    WHERE VG.GROUP_ID=CA.TACTICS_ID AND VG.PARENT_GROUP_ID='TDC02');
  COMMIT;

  --获取每个案件最早下PTP的行动记录
  INSERT INTO R_TEMP_ACTION_M1_2(SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME)
  SELECT SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME
  FROM (SELECT SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME
          ,ROW_NUMBER()OVER(PARTITION BY SYSKEY ORDER BY ACTIONDATE ASC ) AS RN
        FROM R_TEMP_ACTION_M1_1 A ) T WHERE RN=1;
  COMMIT;


  --获取M1自然还款的行动记录，需要剔除已下PTP/YHK的案件
  INSERT INTO R_TEMP_ACTION_M1_3(SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME)
  SELECT SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME
  FROM EXT_ACTION A
  WHERE  A.ACTIONRESULT NOT IN ('YHK','PTP') AND A.ACTIONDATE BETWEEN REPORT_DATE AND REPORT_DATE+0.999999
    AND A.ACTION_LOGINNAME IN
      (SELECT CA.USER_ID FROM EDA_VIRTUAL_GROUP VG,EDA_COLLECTION_ALLOT CA
      WHERE VG.GROUP_ID=CA.TACTICS_ID AND VG.PARENT_GROUP_ID='TDC02')
    AND A.SYSKEY NOT IN (SELECT SYSKEY FROM R_TEMP_ACTION_M1_2);
  COMMIT;

  --获取每个案件最晚下的自然还款的行动记录
  INSERT INTO R_TEMP_ACTION_M1_4(SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME)
  SELECT SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME
  FROM (SELECT SYSKEY,ID, ACTIONDATE, ACTIONRESULT, ACTIONUSER, APPUSER, ACTION_LOGINNAME
          ,ROW_NUMBER()OVER(PARTITION BY SYSKEY ORDER BY ACTIONDATE DESC ) AS RN
        FROM R_TEMP_ACTION_M1_3 A ) T WHERE RN=1;
  COMMIT;

  --把承诺还款行动记录和自然还款行动记录合并到R_TEMP_ACTION_M1表中
  INSERT INTO R_TEMP_ACTION_M1(SYSKEY, ID, ACCOUNTNUMBER, ACTION, ACTIONDATE, ACTIONID, ACTIONLEVEL, ACTIONNOTE, ACTIONRESULT, ACTIONTEAM, ACTIONTIME, ACTIONTYPE, ACTIONUSER, APPTEAM, APPUSER, EFFECTFLG, FEE, GENACTIONDATE, LETTERTYPE, ACTIONPRO, CONNID, LOSECONTACTFLAG, NO_REPAYMENT_DETAIL, NO_REPAYMENT_REASON, ACTION_LOGINNAME)
  SELECT SYSKEY, ID, ACCOUNTNUMBER, ACTION, ACTIONDATE, ACTIONID, ACTIONLEVEL, ACTIONNOTE, ACTIONRESULT, ACTIONTEAM, ACTIONTIME, ACTIONTYPE, ACTIONUSER, APPTEAM, APPUSER, EFFECTFLG, FEE, GENACTIONDATE, LETTERTYPE, ACTIONPRO, CONNID, LOSECONTACTFLAG, NO_REPAYMENT_DETAIL, NO_REPAYMENT_REASON, ACTION_LOGINNAME
  FROM R_TEMP_ACTION_M1_2
  UNION ALL
  SELECT SYSKEY, ID, ACCOUNTNUMBER, ACTION, ACTIONDATE, ACTIONID, ACTIONLEVEL, ACTIONNOTE, ACTIONRESULT, ACTIONTEAM, ACTIONTIME, ACTIONTYPE, ACTIONUSER, APPTEAM, APPUSER, EFFECTFLG, FEE, GENACTIONDATE, LETTERTYPE, ACTIONPRO, CONNID, LOSECONTACTFLAG, NO_REPAYMENT_DETAIL, NO_REPAYMENT_REASON, ACTION_LOGINNAME
  FROM R_TEMP_ACTION_M1_4;
  COMMIT;


  INSERT INTO REPORT_PAYDETAIL_COLLECT_M1(CALL_TIME, PERIOD_OF_TIME, GROUP_NAME, CURRENT_COLLECTOR, COLLECTOR_ID, CUSTOMER_ID, SYSKEY, CALL_RESULT, REPAYMENT_AMOUNT, TIME_INTERVAL, RECEIPT_DATE)
  SELECT TRUNC(T.ACTIONDATE) 拨打时间
    ,VG.GROUP_NAME 时段
    ,VG.GROUP_LEADER 组别
    ,T.ACTIONUSER 催收员姓名
    ,T.ACTION_LOGINNAME 催收员ID
    ,R.CUSTOMER_ID 客户ID
    ,S.Syskey 案件号
    ,T.ACTIONRESULT 拨打结果
    ,R.RECEIPT_AMT 还款金额
    ,R.RECEIPT_DATE-TRUNC(T.ACTIONDATE) 时间间隔
    ,R.RECEIPT_DATE 还款时间
  FROM CS_RECEIPT R ,CS_ACCTSUM S,R_TEMP_ACTION_M1 T,EDA_VIRTUAL_GROUP VG,EDA_COLLECTION_ALLOT CA
  WHERE R.CUSTOMER_ID=S.CUSTOMER_ID AND S.SYSKEY=T.SYSKEY
    AND vg.group_id=ca.tactics_id AND CA.USER_ID=T.ACTION_LOGINNAME
    AND R.RECEIPT_DATE=REPORT_DATE;
  COMMIT;


  --添加完成日志
  PRC_ADD_BATCH_TASK_LOG(TO_CHAR(SYSDATE, 'YYYY/MM/DD'),
                         'REPORT_REPAYDETAIL_M1',
                         '催收N1还款统计明细报表',
                         D_BEGIN_TIME,
                         SYSDATE,
                         '1',
                         NULL);

EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    --插入任务出错日志
    PRC_ADD_BATCH_TASK_LOG(TO_CHAR(SYSDATE, 'YYYY/MM/DD'),
                           'REPORT_REPAYDETAIL_M1',
                           '催收M1还款统计明细报表',
                           D_BEGIN_TIME,
                           SYSDATE,
                           '2',
                           SQLERRM);

END REPORT_REPAYDETAIL_M1;
